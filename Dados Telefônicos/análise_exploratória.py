# -*- coding: utf-8 -*-
"""Análise Exploratória.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JQYmm3S26Y9pRoZw8etc-sfurghDRHqL
"""

# Importando as bibliotecas utilizadas para essa análise
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Lendo o arquivo csv já com as definições de separação, decimal, nulos e colunas numéricas
df = pd.read_csv('dados_originais.csv', sep=';', decimal=',', na_values=' ',
                 dtype={'Renda': 'float', 'Anos': 'Int64', 'Gasto': 'float', 'Minutos': 'Int64'})

df # Pré-visualização dos dados

# Multiplicando a coluna Renda por 1000
df['Renda'] = df['Renda'] * 1000

df.dtypes

# Quantidade de valores nulos em cada coluna
df.isna().sum()

# Verificando se há algum dado duplicado
df.duplicated().sum()

# Resumo das colunas categóricas
df.describe(include=['object'])

# Resumo das colunas numéricas
df.describe()

# Valores únicos das colunas categóricas (inclusive os incompletos e quebrados)
for col in df.iloc[:,:6]:
  print(col, df[col].unique(), '\n')

# Substituir os valores nas colunas categóricas (como tenho todos os valores únicos, fiz dessa maneira, mas há diversas outras)
df['Tipo'].replace(['Pós-pa ', 'Pó ', 'Pós- ', 'Pós ', 'Pós-p '], 'Pós-pago', inplace=True)
df['Tipo'].replace(['Pré ', 'Pr ', 'Pré-pa ', 'Pré-p ', 'Pré- '], 'Pré-pago', inplace=True)

df['Sexo'].replace(['Ma ', 'Mas ', 'Mascu ', 'Mascul ', 'Masc '], 'Masculino', inplace=True)
df['Sexo'].replace(['Femi ', 'Femin ', 'Fem ', 'Fe ', 'Femini '], 'Feminino', inplace=True)

df['Opinião'].replace(['Terrí ', 'Te ', 'Terr ', 'Ter '], 'Terrível', inplace=True)
df['Opinião'].replace(['Sofrív ', 'So ', 'Sofrí ', 'Sofr '], 'Sofrível', inplace=True)
df['Opinião'].replace(['Me ', 'Medi ', 'Med ', 'Media ', 'Median '], 'Mediana', inplace=True)
df['Opinião'].replace(['Con ', 'Confi ', 'Conf '], 'Confiável', inplace=True)
df['Opinião'].replace(['Excele ', 'Exce '], 'Excelente', inplace=True)

df['Modelo'].replace(['Erics ', 'Eric ', 'Eri '], 'Ericsson', inplace=True)
df['Modelo'].replace(['Gradie ', 'Gra ', 'Grad ', 'Gr ', 'Gradi '], 'Gradiente', inplace=True)
df['Modelo'].replace(['Motor ', 'Motoro ', 'Moto ', 'Mo ', 'Mot '], 'Motorola', inplace=True)
df['Modelo'].replace(['Sam ', 'Samsun ', 'Sa ', 'Samsu '], 'Samsung', inplace=True)
df['Modelo'].replace(['Sieme ', 'Si ', 'Siemen ', 'Sie '], 'Siemens', inplace=True)

df['Outra'].replace(['Cum ', 'Cu ', 'Cumb ', 'Cumbu ', 'Cumbuc '], 'Cumbuca', inplace=True)
df['Outra'].replace(['Esc ', 'Escu ', 'Es ', 'Escuri '], 'Escuridão', inplace=True)
df['Outra'].replace(['Ferro ', 'Fer ', 'Ferroc ', 'Fe '], 'Ferrocom', inplace=True)
df['Outra'].replace(['Mort ', 'Morti ', 'Mo ', 'Mortin '], 'Mortinho', inplace=True)
df['Outra'].replace(['Ne ', 'Nen ', 'Nenhum ', 'Nenh '], 'Nenhuma', inplace=True)

df['Razão'].replace(['Ma ', 'Mai ', 'Maio ', 'Maior ', 'Maior  '], 'Maior cobertura', inplace=True)
df['Razão'].replace(['Quali ', 'Qual ', 'Qua ', 'Qu '], 'Qualidade do sinal', inplace=True)
df['Razão'].replace(['Tar ', 'Ta ', 'Tarifa ', 'Tari '], 'Tarifa menor', inplace=True)

# Convertendo as colunas categóricas do tipo 'object' para 'category'
for col in df.iloc[:,:6]:
  df[col] = df[col].astype('category')

df.dtypes

# Preenchendo os valores nulos pela moda nas colunas categóricas
for col in df.iloc[:,:6]:
  df[col].fillna(df[col].mode()[0], inplace=True)

# Resumo das colunas categóricas após as transformções
df.describe(include=['category'])

# Preenchendo os valores nulos pela mediana nas colunas numéricas
for col in df.iloc[:,6:]:
  df[col].fillna(df[col].median(), inplace=True)

# Resumo das colunas numéricas após as transformções
df.describe()

_, axs = plt.subplots(2, 2, figsize=(15, 10)) # Criar subplots para cada coluna numérica

for i, col in enumerate(df.iloc[:, 6:]):
    # Criando o boxplot com algumas configurações, a linha tracejada laranja é de média
    axs[i>>1][i&1].boxplot(df[col], showmeans=True, meanline=True, meanprops=dict(color='orange'), medianprops=dict(color='green'))

    # Adicionando títulos
    axs[i>>1][i&1].set_ylabel(col, fontweight='bold')
    axs[i>>1][i&1].set_title(f'Boxplot de {col}', fontsize=15, fontweight='bold')

    # Calculando valores dos percentis
    q0 = np.percentile(df[col], 0)   # np.min(df[col])
    q1 = np.percentile(df[col], 25)
    q2 = np.percentile(df[col], 50)  # np.median(df[col])
    q3 = np.percentile(df[col], 75)
    q4 = np.percentile(df[col], 100) # np.max(df[col])

    # Adicionando textos dos valores calculados
    axs[i>>1][i&1].text(1.08, q0, f'Mínimo: {q0:.2f}', fontsize=10, color='red', fontweight='bold')
    axs[i>>1][i&1].text(1.08, q1, f'Q1: {q1:.2f}', fontsize=10, color='blue', fontweight='bold')
    axs[i>>1][i&1].text(1.08, q2, f'Mediana: {q2:.2f}', fontsize=10, color='green', fontweight='bold')
    axs[i>>1][i&1].text(1.08, q3, f'Q3: {q3:.2f}', fontsize=10, color='blue', fontweight='bold')
    axs[i>>1][i&1].text(1.08, q4, f'Máximo: {q4:.2f}', fontsize=10, color='red', fontweight='bold')

plt.tight_layout() # Ajustar layout
plt.show() # Exibir o gráfico

_, axs = plt.subplots(2, 2, figsize=(15, 10)) # Criar subplots para cada coluna numérica

for i, col in enumerate(df.iloc[:, 6:]):
    # Criando o histograma com algumas configurações
    axs[i>>1][i&1].hist(df[col], edgecolor='black')

    # Adicionando títulos e legendas
    axs[i>>1][i&1].set_xlabel(col, fontweight='bold')
    axs[i>>1][i&1].set_ylabel('Quantidade', fontweight='bold')
    axs[i>>1][i&1].set_title(f'Histograma de {col}', fontsize=15, fontweight='bold')

plt.tight_layout() # Ajustar layout
plt.show() # Exibir o gráfico

# Salvando o arquivo formatado em csv e voltando para separação por ponto e vírgula e decimais com vírgula sem indeces
df.to_csv('dados_formatados.csv', sep=';', decimal=',', index=False)